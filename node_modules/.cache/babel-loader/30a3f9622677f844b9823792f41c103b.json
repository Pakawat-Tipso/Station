{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mac/Desktop/station-react-firebase/src/views/History.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport { auth, db } from \"../firebase/config\";\nexport default class Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: auth().currentUser,\n      notes: [],\n      content: \"\",\n      note: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.createNote = this.createNote.bind(this);\n  }\n\n  componentDidMount() {\n    db.ref(`all_notes/${this.state.user.uid}`).on(\"value\", snapshot => {\n      let allNotes = [];\n      snapshot.forEach(snap => {\n        allNotes.push(snap.val());\n      });\n      console.log(allNotes);\n      this.setState({\n        notes: allNotes\n      });\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      content: e.target.value\n    });\n  }\n\n  createNote() {\n    const uid = this.state.user.uid;\n    const {\n      content\n    } = this.state;\n    const note = this.state.note;\n\n    if (note && note.content) {\n      return db.ref(`all_notes/${uid}/${note.note_id}`).update({\n        content,\n        uid\n      }).then(_ => {\n        this.setState({\n          content: \"\",\n          note: {}\n        });\n      }).catch(error => console.log(error.message));\n    }\n\n    const note_id = `note-${Date.now()}`;\n    db.ref(`all_notes/${uid}/${note_id}`).set({\n      content,\n      note_id,\n      uid\n    }).then(_ => {\n      this.setState({\n        content: \"\"\n      });\n    }).catch(error => console.log(error.message));\n  }\n\n  editNote(note_id) {\n    db.ref(`all_notes/${this.state.user.uid}/${note_id}`).once(\"value\").then(snapshot => {\n      this.setState({\n        note: snapshot.val(),\n        content: snapshot.val().content\n      });\n    });\n  }\n\n  deleteNote(note_id) {\n    db.ref(`all_notes/${this.state.user.uid}/${note_id}`).remove();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-4\",\n        children: [\"Login in as: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: this.state.user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), this.state.notes.map(note => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card card-body shadow-sm m-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: note.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-round btn btn-danger\",\n            onClick: () => this.deleteNote(note.note_id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, note.note_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mx-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          onChange: this.handleChange,\n          value: this.state.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success mt-3\",\n          onClick: this.createNote,\n          children: \"Create Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/station-react-firebase/src/views/History.js"],"names":["React","Component","Header","Footer","auth","db","Profile","constructor","state","user","currentUser","notes","content","note","handleChange","bind","createNote","componentDidMount","ref","uid","on","snapshot","allNotes","forEach","snap","push","val","console","log","setState","e","target","value","note_id","update","then","_","catch","error","message","Date","now","set","editNote","once","deleteNote","remove","render","email","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport { auth, db } from \"../firebase/config\";\n\nexport default class Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: auth().currentUser,\n      notes: [],\n      content: \"\",\n      note: {},\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.createNote = this.createNote.bind(this);\n  }\n\n  componentDidMount() {\n    db.ref(`all_notes/${this.state.user.uid}`).on(\"value\", (snapshot) => {\n      let allNotes = [];\n      snapshot.forEach((snap) => {\n        allNotes.push(snap.val());\n      });\n      console.log(allNotes);\n      this.setState({ notes: allNotes });\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      content: e.target.value,\n    });\n  }\n\n  createNote() {\n    const uid = this.state.user.uid;\n    const { content } = this.state;\n    const note = this.state.note;\n    if (note && note.content) {\n      return db\n        .ref(`all_notes/${uid}/${note.note_id}`)\n        .update({\n          content,\n          uid,\n        })\n        .then((_) => {\n          this.setState({ content: \"\", note: {} });\n        })\n        .catch((error) => console.log(error.message));\n    }\n    const note_id = `note-${Date.now()}`;\n    db.ref(`all_notes/${uid}/${note_id}`)\n      .set({\n        content,\n        note_id,\n        uid,\n      })\n      .then((_) => {\n        this.setState({ content: \"\" });\n      })\n      .catch((error) => console.log(error.message));\n  }\n\n  editNote(note_id) {\n    db.ref(`all_notes/${this.state.user.uid}/${note_id}`)\n      .once(\"value\")\n      .then((snapshot) => {\n        this.setState({\n          note: snapshot.val(),\n          content: snapshot.val().content,\n        });\n      });\n  }\n\n  deleteNote(note_id) {\n    db.ref(`all_notes/${this.state.user.uid}/${note_id}`).remove();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"mx-4\">\n          Login in as: <strong>{this.state.user.email}</strong>\n        </div>\n        {this.state.notes.map((note) => {\n          return (\n            <div key={note.note_id} className=\"card card-body shadow-sm m-4\">\n              <p>{note.content}</p>\n              <button\n                className=\"btn btn-round btn btn-danger\"\n                onClick={() => this.deleteNote(note.note_id)}\n              >\n                Delete\n              </button>\n            </div>\n          );\n        })}\n        <div className=\"form-group mx-4\">\n          <input\n            className=\"form-control\"\n            onChange={this.handleChange}\n            value={this.state.content}\n          />\n          <button className=\"btn btn-success mt-3\" onClick={this.createNote}>\n            Create Note\n          </button>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}